@model Webhooks.UI.WebhookResultsViewModel
@using EPiServer.Shell.Web.Mvc.Html
@using EPiServer.Web
@using EPiServer.Web.Mvc.Html
@{
    Layout = null;
}
<html>
    <head>
        @Html.Raw(Html.ShellCssLink("ClientResources/epi/themes/legacy/ShellCore.css"))
        @Html.Raw(Html.ShellCssLink("ClientResources/epi/themes/sleek/document.css"))
        @Html.Raw(Html.ShellCssLink("ClientResources/epi/themes/sleek/sleek1.css"))
        @Html.Raw(Html.ShellCssLink("ClientResources/epi/themes/sleek/sleek2.css"))
    <style>
        table {
            border: none;
            width: 100%;
        }

        th {
            border-top: 1px solid #000;
            border-bottom: 1px solid #000;
        }

        tr:nth-child(even) {
            background: #ccc;
        }

        td, th {
            padding: 5px;
        }
    </style>
    <script>
        dojoConfig = {
            async: true,
            parseOnLoad: true,
            packages: []
        };
    </script>


    <script type="text/javascript" src="@EPiServer.Shell.Paths.ToShellClientResource("ClientResources/dojo/dojo.js")"></script>
    <script>
        require(["dojo/parser", "epi/shell/DialogService"]);
    </script>

    <script type="text/javascript" src="@EPiServer.Shell.Paths.ToShellClientResource("ClientResources/epi/epi.js")"></script>

    </head>
    <body class="Sleek">
        <div class="epi-form-container" style="border-top: 1px solid #d6d6d6;">
            <section class="epi-form-container__section" style="margin-right: 31px;">
                <h1>Results for @Model.CurrentBlock.Name</h1>
            <table role="presentation">
                <thead class="dgrid-header">
                    <tr>
                        <th role="columnheader">Triggered</th>
                        <th role="columnheader">Content</th>
                        <th role="columnheader">Action</th>
                        <th role="columnheader">Result</th>

                    </tr>
                </thead>
                @foreach (var item in Model.Results)
                {
                    <tr>
                        <td role="gridcell">@item.created.ToString("u")</td>
                        <td role="gridcell" style="text-overflow: ellipsis; max-width: 550px; white-space: nowrap; overflow: hidden;">@Html.ContentLink(item.contentLink, new HtmlLinkArguments { HtmlAttributes = new { Target = "_blank" }, LinkText = item.contentName})</td>
@*                        <td role="gridcell">
                            <button data-dojo-type="dijit/form/Button" data-dojo-props="iconClass:'epi-iconPen'" type="button" onclick="location.href = '@Url.Action("Edit")/?guid=@item.Id.ExternalId'">Edit</button>
                            <button data-dojo-type="dijit/form/Button" data-dojo-props="iconClass:'epi-iconPrimary'" type="button" onclick="test('@item.Id.ExternalId')">Test</button>
                            <button data-dojo-type="dijit/form/Button" data-dojo-props="iconClass:'epi-iconTrash epi-icon--inverted'" type="button" class="epi-danger" onclick="if (confirm('Are you sure you want to delete this webhook?\n\nN.B. This action can\'t be undone.')) location.href = '@Url.Action("Delete")/@item.Id.ExternalId';">Delete</button>
                        </td>
*@
                        <td role="gridcell">@item.action</td>
                        <td role="gridcell">
                            <ul>
                            @foreach (var status in item.history)
                            {
                                <li onclick="ShowFullResponse('@(item.id.ToString() + status.Executed.Ticks)')" style="cursor: pointer;">
                                        @(status.Successful ? "🟢" : "🔴") @status.Executed.ToString("u"), @(status.Successful ? "succeeded" : "failed") (@status.StatusCode) in @(status.Elapsed)ms
                                        <span style="display: none" id="res@(item.id.ToString() + status.Executed.Ticks)">@System.Net.WebUtility.HtmlEncode(status.Result ?? "").Replace("\n", "<br/>")</span>
                                </li>
                            }
                            </ul>
                        </td>
                    </tr>
                }
            </table>
        </section>
        </div>

        <script>
        function ShowFullResponse(id) {
            var message = document.getElementById("res" + id).innerHTML;
            require(["epi/shell/DialogService"], function (dialogService) {
                dialogService.alert({
                    heading: "Response Detail",
                    content: "",
                    description: htmlDecode(message),
                    iconClass: ".epi-iconInfo epi-icon--colored"
                });
            });
        }

        function htmlDecode(input) {
            var doc = new DOMParser().parseFromString(input, "text/html");
            return doc.documentElement.textContent;
        }

        </script>
    </body>
</html>